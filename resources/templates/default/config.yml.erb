counters:
  batch_timeout_s: 5                     # Max time to wait before send a count message
  batch_max_messages: 1000               # Max number of messages to hold before send a count message
  kafka:                                 # Kafka configuration
    write_topic: "rb_monitor"            # Topic to send the count
    read_topics:                         # Topics to read messages for accounting
<%
topics=[]
 [ "rb_flow", "rb_event", "rb_vault", "rb_scanner", "rb_location" ].each do |topic|
   unless (!node["redborder"]["manager"]["topics"].nil? and node["redborder"]["manager"]["topics"][topic]=="none")
     if topic != "rb_mail" and topic != "rb_endpoint" and topic != "rb_malware"
       real_topic= ((!node["redborder"]["manager"]["topics"].nil? and ( node["redborder"]["manager"]["topics"][topic]=="both" or node["redborder"]["manager"]["topics"][topic]=="rb-enrich" or node["redborder"]["manager"]["topics"][topic]=="samza") and topic!="rb_monitor" and topic!="rb_iot" ) ? "#{topic}_post" : topic )
     else
       real_topic = topic
     end
     topics<<real_topic
   end
 end
 %>
 <% topics.each do |t| %>
       - "<%= t %>"
 <% end %>
    attributes:                          # Custom internal rdkafka attributes
      bootstrap.servers:  "kafka.service:9092"
      group.id: "counters"

monitor:
  timer:
    period: 86400                        # Width in seconds of the interval between counters reset (86400 -> 24h)
    offset: 0                            # Offset in seconds to change the start of the interval (0 -> 00:00h)
  kafka:                                 # Kafka configuration
    write_topic: "rb_limits"             # Topic to send the alerts
    read_topics:                         # Topics to read messages with accounting info
      - "rb_monitor"
    attributes:                          # Custom internal rdkafka attributes
      bootstrap.servers:  "kafka.service:9092"
      enable.auto.commit: "false"        # IMPORTANT: Should be set to false
      group.id: "counters-monitor"

licenses_directory: /etc/licenses
organization_mode: <%= @licmode.eql?("organization") ? "true" : "false" %>